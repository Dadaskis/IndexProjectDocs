[gd_resource type="Resource" load_steps=2 format=2]

[ext_resource path="res://modules/doc_info/src/doc_info.gd" type="Script" id=1]

[resource]
script = ExtResource( 1 )
info = "Hit Body module that simplifies work with bodies that you can hit one way or another (like hitting with ray or with bodies). On top of that it helps to save node count by removing legacy version when you were forced to create a child node of physics body to add some kind of hit-able property to it.

[c]Usage examples[/c]
Getting a hit body property:
[gd]
var usable = HitBodyTool.get_node_property(body, Usable.OBJECT_NAME)
if usable:
	# ...
[/gd]

Setting a hit body property:
[gd]
# Keep in mind, node property can be assigned to any object.
# But usually it makes sense to assign it to a physics body
# like StaticBody, RigidBody, etc.
# Because you can get it in later physics checks like raycasts.
HitBodyTool.add_node_property(body, Usable.OBJECT_NAME, usable)
[/gd]

Creating your own hit body property:
[gd]
# Hit body property template
class_name YourNameHere

extends HitBodyProperty

const OBJECT_NAME = \"YOUR_NAME_HERE\"

# Main initialization called when object enters scene
func on_init():
	# Initializaiton logic here
	# ...
[/gd]"
info_rus = "Модуль Hit Body, который упрощает работу с телами, которые можно так или иначе поразить (например, лучом или другими телами). Кроме того, он помогает сократить количество узлов, убирая устаревшую версию, когда ты был вынужден создавать дочерний узел физического тела, чтобы добавить к нему какое-либо свойство поражения.

[c]Примеры использования[/c]
Получение свойства hit body:
[gd]
var usable = HitBodyTool.get_node_property(body, Usable.OBJECT_NAME)
if usable:
	# ...
[/gd]

Установка свойства hit body:
[gd]
# Имей в виду, свойство узла может быть назначено любому объекту.
# Но обычно имеет смысл назначать его физическому телу,
# такому как StaticBody, RigidBody и т.д.
# Потому что ты можешь получить его при последующих проверках физики, например, рейкастах.
HitBodyTool.add_node_property(body, Usable.OBJECT_NAME, usable)
[/gd]

Создание своего собственного свойства hit body:
[gd]
# Шаблон свойства hit body
class_name YourNameHere

extends HitBodyProperty

const OBJECT_NAME = \"YOUR_NAME_HERE\"

# Основная инициализация, вызывается при входе объекта в сцену
func on_init():
	# Логика инициализации здесь
	# ...
[/gd]"
edit_time = 1.76123e+09
