[gd_resource type="Resource" load_steps=2 format=2]

[ext_resource path="res://modules/doc_info/src/doc_info.gd" type="Script" id=1]

[resource]
script = ExtResource( 1 )
info = "//img:comics_editor/game0.jpg
//img:comics_editor/editor0.jpg

A comics player that comes along with an editor in [gd]\"comics_editor\"[/gd] location. This is a simple \"comics\" player that shows some images, text, boxes, text bubbles, glitch effects, etc. Imagery used in comics are presumably rendered in [gd]\"comics_renderer\"[/gd] and might have minor adjustments in any image editor.

[c]Usage example[/c]
[gd]
ComicsPlayer.play_comics_by_name(\"test0\")
[/gd]

[c]Keep in mind[/c]
[gd]ComicsPlayer[/gd] is not handling any cursor control logic. Therefore, you might be interested to use a following setup:
[gd]
CursorControl.show(\"comics_player\")
ComicsPlayer.play_comics_by_name(\"test0\")
yield(ComicsPlayer, \"finished\")
CursorControl.deactivate(\"comics_player\")
[/gd]

</p><h2>Technical Side</h2><p>

[c]Script Hierarchy[/c]
[gd]
Core Data
├── comics_data.gd (Root)
│	└── comics_page_data.gd (Pages)
│		└── comics_picture_data.gd (Panels)
│			└── comics_text_box_data.gd (Text/Audio)
│
Editor System
├── comics_editor.gd (Main UI)
├── editor_comic_control.gd (Rendering)
├── editor_relay.gd (Data ↔ UI)
└── text_box_transform_button.gd (Editing Tools)
│
Player System
├── comics_player.gd (Playback Engine)
└── comics_player_test.gd (Test Script)
[/gd]

[c]Core Data[/c]
This is the data of comics. Root has data about multiple pages, pages have data about pattern and its panels, panel data contains info about pictures and text boxes. Simple enough, but it is nested for the sake of extensibility.
[gd]
Core Data
├── comics_data.gd (Root)
│	# Array of pages
│	└── comics_page_data.gd (Pages)
│		# Page data, in this case, it contains pattern info and then an array of pictures filling up this pattern
│		└── comics_picture_data.gd (Panels)
│			# Picture data that has image data as well as array of text boxes tied to this panel
│			└── comics_text_box_data.gd (Text/Audio)
│				# Text box data, contains text info, typewriter settings, voice/audio config, as well as 
│				# conditions of \"continuing\" to the next text box. All of the text boxes are playing one
│				# after another
[/gd]

[c]Editor System[/c]
Editor is *trying* to follow [gd]\"What You See Is What You Get\"[/gd] principle, however it doesn't allow seeing all the effects on top without playing the comic fully. However, it does allow to quickly setup all comics data and see how it basically looks like. Main key features of editor system are being non-destructive workflows (you can return whenever you want and original files are untouched) and possibility for very easy preview of all images, audio, text box positioning, pages, as well as possibility to pre-play the comics to see how it would look like in-game.
[gd]
Editor System
├── comics_editor.gd (Main UI)
│	# The brain of the editor, or, at least, \"visual\" one for the end-user.
│	# - Manages UI panels, like page list, image selector, text box settings
│	# - Handles saving/loading of comic files stored at...
│	# res://modules/comics_player/assets/comics/
│	# - Coordinates between editing tools and visual preview
├── editor_comic_control.gd (Rendering)
│	# The renderer.
│	# - Takes data from ComicsPageData and displays it in real-time
│	# - Applies shaders for panel borders, image effects
│	# - Handles pattern templates (1_pic, 2_pic, 3_pic, 4_pic, etc)
├── editor_relay.gd (Data ↔ UI)
│	# \"Relay\" between comic's data and UI
│	# - Connects UI controls (like text inputs) to the actual comic's data
│	# - Updates text boxes when you type, changes styles when you pick one of the variants, etc
└── text_box_transform_button.gd (Editing Tools)
│	# Allows you to move, rotate and scale text boxes
[/gd]

[c]Player System[/c]
The player system loads comic files (.tres) and turns them into a \"slideshow\" with animations, sounds, and click-to-advance controls. Uses data exported by the editor system to show to the player.
[gd]
Player System
├── comics_player.gd (Playback Engine)
│	# A complex playback script that has a following algorithm:
│	# - Loading the comic
│	#	- Preloads images, fonts, audio, sets up timers/animations
│	# - Playing a page
│	#	- Loads a pattern scene, places images there
│	#	- Animate elements, fade panels, process typewriter effect, play audio
│	# - Wait for input/timer
│	#	- Auto-advance after delay OR click a button to continue
│	# - Advancing to the next page to repeat all over again or end the comic, if no pages left to play.
└── comics_player_test.gd (Test Script)
│	# A little test script, kept just in case :)
[/gd]

</p><h2>How to use the comics editor</h2><p>
The system is simple, really... But if you are so hopeless and have to go here to read it all... Well i guess i'll have to yoink some of your RAM to show you ~imagery~.

Firstly you simply switch to [gd]\"comics_editor\"[/gd] location with [c]change_location comics_editor[/c] in console or by using [c]dev_menu[/c]
//img:comics_editor/use0.jpg
//img:comics_editor/use1.jpg
By pressing \"New Page\" you make a new page (wow, unbelievable)
//img:comics_editor/use2.jpg
By pressing on a newly made page called \"Page 0\" you will edit this page's config (super hard, i know)
//img:comics_editor/use3.jpg
You can change pattern here
//img:comics_editor/use4.jpg
You can also add pictures, tweak its positioning, keep in mind - only after adding a picture you can add text boxes as they are tied directly to a given picture.
//img:comics_editor/use5.jpg
When you are done: Just save it, for the first time it'll require you to set a name for your comic's data file, but then pressing \"Save\" button will save it automatically to a given file.
//img:comics_editor/use6.jpg
By pressing a \"Play Comics\" button - you'll be able to preview how your comics will be played in-game. \"Play Comics\" plays all the pages. \"Play Comics Page\" plays only the page you are currently editing.
//img:comics_editor/use7.jpg
And i swear to god, if you will have any questions regarding functionality of this editor tool even AFTER all these images..."
info_rus = "//img:comics_editor/game0.jpg
//img:comics_editor/editor0.jpg

Плеер комиксов, который поставляется вместе с редактором в локации [gd]\"comics_editor\"[/gd]. Это простой плеер \"комиксов\", который показывает изображения, текст, рамки, текстовые пузыри, глитч-эффекты и т.д. Изображения, используемые в комиксах, возможно рендерятся в [gd]\"comics_renderer\"[/gd] и могут иметь незначительные регулировки в любом графическом редакторе.

[c]Пример использования[/c]
[gd]
ComicsPlayer.play_comics_by_name(\"test0\")
[/gd]

[c]Имей в виду[/c]
[gd]ComicsPlayer[/gd] не обрабатывает логику управления курсором. Поэтому тебе вероятнее всего будет интересно использовать следующую настройку:
[gd]
CursorControl.show(\"comics_player\")
ComicsPlayer.play_comics_by_name(\"test0\")
yield(ComicsPlayer, \"finished\")
CursorControl.deactivate(\"comics_player\")
[/gd]

</p><h2>Техническая сторона</h2><p>

[c]Иерархия скриптов[/c]
[gd]
Основные данные
├── comics_data.gd (Корень)
│	└── comics_page_data.gd (Страницы)
│		└── comics_picture_data.gd (Панели)
│			└── comics_text_box_data.gd (Текст/Аудио)
│
Система редактора
├── comics_editor.gd (Главный UI)
├── editor_comic_control.gd (Рендеринг)
├── editor_relay.gd (Данные ↔ UI)
└── text_box_transform_button.gd (Инструменты редактирования)
│
Система плеера
├── comics_player.gd (Движок воспроизведения)
└── comics_player_test.gd (Тестовый скрипт)
[/gd]

[c]Основные данные[/c]
Это данные комиксов. Корень содержит данные о нескольких страницах, страницы содержат данные о шаблоне и его панелях, данные панели содержат информацию о изображениях и текстовых блоках. Достаточно просто, но это вложено ради расширяемости.
[gd]
Основные данные
├── comics_data.gd (Корень)
│	# Массив страниц
│	└── comics_page_data.gd (Страницы)
│		# Данные страницы, в данном случае, содержат информацию о шаблоне и затем массив изображений, заполняющих этот шаблон
│		└── comics_picture_data.gd (Панели)
│			# Данные изображения, которые имеют данные картинки, а также массив текстовых блоков, привязанных к этой панели
│			└── comics_text_box_data.gd (Текст/Аудио)
│				# Данные текстового блока, содержат информацию о тексте, настройки печатной машинки, конфигурацию голоса/аудио, а также
│				# условия \"продолжения\" к следующему текстовому блоку. Все текстовые блоки воспроизводятся один
│				# за другим
[/gd]

[c]Система редактора[/c]
Редактор *пытается* следовать принципу [gd]\"What You See Is What You Get\"[/gd], однако он не позволяет видеть все эффекты поверх без полного воспроизведения комикса. Тем не менее, он позволяет быстро настроить все данные комикса и увидеть, как это выглядит. Основные ключевые особенности системы редактора - это неразрушающие рабочие процессы (ты можешь вернуться когда угодно, и исходные файлы остаются нетронутыми) и возможность очень лёгкого предварительного просмотра всех изображений, аудио, позиционирования текстовых блоков, страниц, а также возможность предварительного воспроизведения комикса, чтобы увидеть, как он будет выглядеть в игре.
[gd]
Система редактора
├── comics_editor.gd (Главный UI)
│	# Мозг редактора, или, по крайней мере, \"визуальный\" для конечного пользователя.
│	# - Управляет UI панелями, такими как список страниц, селектор изображений, настройки текстовых блоков
│	# - Обрабатывает сохранение/загрузку файлов комиксов, хранящихся в...
│	# res://modules/comics_player/assets/comics/
│	# - Координирует между инструментами редактирования и визуальным превью
├── editor_comic_control.gd (Рендеринг)
│	# Рендерер.
│	# - Берет данные из ComicsPageData и отображает их в реальном времени
│	# - Применяет шейдеры для границ панелей, эффекты изображений
│	# - Обрабатывает шаблоны (1_pic, 2_pic, 3_pic, 4_pic и т.д.)
├── editor_relay.gd (Данные ↔ UI)
│	# \"Ретранслятор\" между данными комикса и UI
│	# - Соединяет элементы управления UI (такие как текстовые поля) с фактическими данными комикса
│	# - Обновляет текстовые блоки, когда ты печатаешь, меняет стили, когда ты выбираешь один из вариантов, и т.д.
└── text_box_transform_button.gd (Инструменты редактирования)
│	# Позволяет тебе перемещать, вращать и масштабировать текстовые блоки
[/gd]

[c]Система плеера[/c]
Система плеера загружает файлы комиксов (.tres) и превращает их в \"слайд-шоу\" с анимациями, звуками и управлением \"щёлкни-для-продолжения\". Использует данные, экспортированные системой редактора, для показа игроку.
[gd]
Система плеера
├── comics_player.gd (Движок воспроизведения)
│	# Сложный скрипт воспроизведения, который имеет следующий алгоритм:
│	# - Загрузка комикса
│	#	- Предзагружает изображения, шрифты, аудио, настраивает таймеры/анимации
│	# - Воспроизведение страницы
│	#	- Загружает сцену шаблона, размещает изображения там
│	#	- Анимирует элементы, fading панели, обрабатывает эффект печатной машинки, воспроизводит аудио
│	# - Ожидание ввода/таймера
│	#	- Автоматическое продолжение после задержки ИЛИ нажатие кнопки для продолжения
│	# - Переход к следующей странице, чтобы повторить всё снова или закончить комикс, если не осталось страниц для воспроизведения.
└── comics_player_test.gd (Тестовый скрипт)
│	# Маленький тестовый скрипт, сохранённый на всякий случай :)
[/gd]

</p><h2>Как использовать редактор комиксов</h2><p>
Система проста... Но если ты так безнадёжен и должен прийти сюда, чтобы прочитать всё это... Ну, я полагаю, мне придётся стырить часть твоей оперативной памяти, чтобы показать тебе ~изображения~.

Сначала ты просто переключаешься на локацию [gd]\"comics_editor\"[/gd] с помощью [c]change_location comics_editor[/c] в консоли или используя [c]dev_menu[/c]
//img:comics_editor/use0.jpg
//img:comics_editor/use1.jpg
Нажав \"New Page\", ты создаёшь новую страницу (вау, невероятно)
//img:comics_editor/use2.jpg
Нажав на только что созданную страницу под названием \"Page 0\", ты будешь редактировать конфигурацию этой страницы (супер сложно, я знаю)
//img:comics_editor/use3.jpg
Ты можешь изменить шаблон здесь
//img:comics_editor/use4.jpg
Ты также можешь добавлять изображения, настраивать их позиционирование, имей в виду - только после добавления изображения ты можешь добавлять текстовые блоки, поскольку они привязаны directly к данному изображению.
//img:comics_editor/use5.jpg
Когда ты закончил: Просто сохрани это, в первый раз это потребует от тебя установить имя для файла данных твоего комикса, но затем нажатие кнопки \"Save\" будет автоматически сохранять его в заданный файл.
//img:comics_editor/use6.jpg
Нажав кнопку \"Play Comics\" - ты сможешь предварительно просмотреть, как твой комикс будет воспроизводиться в игре. \"Play Comics\" воспроизводит все страницы. \"Play Comics Page\" воспроизводит только страницу, которую ты сейчас редактируешь.
//img:comics_editor/use7.jpg
И я клянусь богом, если у тебя возникнут какие-либо вопросы относительно функциональности этого инструмента редактора даже ПОСЛЕ всех этих изображений..."
edit_time = 1.76113e+09
